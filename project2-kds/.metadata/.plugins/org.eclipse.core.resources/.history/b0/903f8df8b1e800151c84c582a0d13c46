/*
 * timer.c
 *
 *  Created on: Feb 28, 2016
 *      Author: jimmy
 */

#include "timer.h"
#include "MKL25Z4.h"

void led_timer_init(){
	// Set clock to use internal 4MHz osc
	MCG_C1 = MCG_C1_IRCLKEN_MASK;
	MCG_C2 = MCG_C2_IRCS_MASK;

	// Enable TPM2/0 clk and set to use 4MHz osc
	SIM_SCGC6 |= SIM_SCGC6_TPM2_MASK;
	SIM_SCGC6 |= SIM_SCGC6_TPM0_MASK;
	SIM_SOPT2 |= SIM_SOPT2_TPMSRC(3);

	// Configure TPM 2 channels 0/1
	TPM2_BASE_PTR->SC = TPM_SC_CMOD(1) | TPM_SC_PS(3);
 	TPM2_C0SC = TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK;
 	TPM2_BASE_PTR->CONTROLS[1].CnSC = TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK;

 	// Configure TPM 0 channel 1
	TPM0_BASE_PTR->SC = TPM_SC_CMOD(1) | TPM_SC_PS(3);
 	TPM0_BASE_PTR->CONTROLS[1].CnSC = TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK;

	// Set TPM 2 period and duty cycle
 	TPM2_BASE_PTR->MOD = 0x0F41; // 3905

	// Set TPM 0 period and duty cycle
 	TPM0_BASE_PTR->MOD = 0x0F41; // 3905

	// Enable interrupt
	TPM2_SC |= TPM_SC_TOIE_MASK;
	TPM0_SC |= TPM_SC_TOIE_MASK;
	NVIC->ISER[0] |= 1 << 16;
	NVIC->ISER[0] |= 1 << 18;
}

void profiling_timer_init(){
    //  Enable 4MHz internal ref clock
	MCG_C1 = MCG_C1_IRCLKEN_MASK;
	MCG_C2 = MCG_C2_IRCS_MASK;

	// Configure TPM1 to use internal ref clock
	SIM_SCGC6 |= SIM_SCGC6_TPM1_MASK;
	SIM_SOPT2 |= SIM_SOPT2_TPMSRC(3);

	// Configure TPM1 clock mode and prescale value
	TPM1_BASE_PTR->SC = TPM_SC_CMOD(1) | TPM_SC_PS(2);

	// Set TPM 1 max count value
	TPM1_BASE_PTR->MOD = 0x0009;

	// Enable interrupt
	TPM1_SC |= TPM_SC_TOIE_MASK;
	NVIC->ISER[0] = 1 << 17;
}
